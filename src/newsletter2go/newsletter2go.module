<?php

/**
 * Return block info.
 *
 * @return mixed
 */
function newsletter2go_block_info()
{
    $blocks['newsletter2go'] = array(
        'info' => t('Newsletter2Go'),
        'cache' => DRUPAL_CACHE_PER_ROLE,
    );

    return $blocks;
}

/**
 * Return block view.
 *
 * @param string $delta
 * @param string $func
 * @return array
 */
function newsletter2go_block_view($delta = '', $func = 'createForm')
{
    $block = array();

    switch ($delta) {
        case 'newsletter2go':
            $formUniqueCode = variable_get('newsletter2go_formUniqueCode');
            $n2gConfig = variable_get('newsletter2go_widgetStyleConfig');

            $params = "'subscribe:$func', " . $n2gConfig;
            if ($func == 'createPopup') {
                $params .= ", 5"; // '5' seconds delay
            }

            $block['subject'] = t('Newsletter2Go');
            $block['content'] = '<script id="n2g_script">
                !function(e,t,n,c,r,a,i){e.Newsletter2GoTrackingObject=r,e[r]=e[r]||function(){(e[r].q=e[r].q||[]).push(arguments)},e[r].l=1*new Date,a=t.createElement(n),i=t.getElementsByTagName(n)[0],a.async=1,a.src=c,i.parentNode.insertBefore(a,i)}(window,document,"script","//static.newsletter2go.com/utils.js","n2g");
                n2g(\'create\',\''.$formUniqueCode.'\');
                n2g(' . $params . ');
                        </script>';
    }

    return $block;
}

/**
 * Check permission.
 *
 * @return array
 */
function newsletter2go_permission()
{
    return array(
        'access newsletter2go content' => array(
            'title' => t('Access content for the newsletter2go module'),
        )
    );
}

/**
 * Returns menu.
 *
 * @return array
 */
function newsletter2go_menu()
{
    $items = array();

    $items['admin/config/content/newsletter2go'] = array(
        'title' => 'Newsletter2Go',
        'description' => 'API page for newsletter2go module',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('newsletter2go_form'),
        'access arguments' => array('access administration pages'),
        'type' => MENU_NORMAL_ITEM,
    );

    $items['n2go/widget'] = array(
        'title' => 'Widget Preview',
        'page callback' => '_widget_preview_page',
        'type' => MENU_CALLBACK,
        'access callback' => true,
    );

    $items['api/n2go'] = array(
        'title' => 'Newsletter2Go',
        'page callback' => '_newsletter2go_page',
        'access arguments' => array('access newsletter2go content'),
        'type' => MENU_CALLBACK,
        'access callback' => true,
    );
    $items['n2go/subscribe'] = array(
        'title' => 'Subscribe',
        'page callback' => '_ajax_newsletter2go_page',
        'access arguments' => array('access newsletter2go content'),
        'type' => MENU_CALLBACK,
        'access callback' => true,
    );

    return $items;
}

/**
 * Return page alert.
 *
 * @param $page
 */
function newsletter2go_page_alter(&$page)
{
    if (strpos($_SERVER['REQUEST_URI'], url('n2go/widget')) === 0) {
        $page['page_top'] = null;
        $page['sidebar_first'] = null;
        $page['sidebar_second'] = null;
        $page['page_bottom'] = null;
        $page['footer'] = null;
    }
}

/**
 * Widget preview page.
 *
 * @return string
 */
function _widget_preview_page()
{
    return urldecode($_GET['widget']);
}

/**
 * Process instance authorization.
 */
function _newsletter2go_page()
{
    require_once __DIR__ . '/newsletter2goApi.php';
    $instance = Newsletter2GoApi::getInstance();
    $instance->processRequest($_SERVER['PHP_AUTH_USER'], $_GET, $_POST);
}

/**
 * Request newsletter2go page.
 */
function _ajax_newsletter2go_page()
{
    $notFound = false;
    $noValidEmail = false;
    $attributes = variable_get('newsletter2go_fields');
    $requiredFields = variable_get('newsletter2go_required');
    $texts = variable_get('newsletter2go_texts');
    $post = array();
    foreach ($attributes as $k => $v) {
        if (!empty($requiredFields[$k]) && empty($_POST[$k])) {
            $notFound = true;
            break;
        }

        if ($k == 'email') {
            if (!filter_var($_POST[$k], FILTER_VALIDATE_EMAIL)) {
                $noValidEmail = true;
            }
        }

        $post[$k] = $_POST[$k];
    }

    if ($notFound) {
        drupal_json_output(array('success' => 0, 'message' => $texts['failureRequired']));
        drupal_exit();
    }

    if ($noValidEmail) {
        drupal_json_output(array('success' => 0, 'message' => $texts['failureEmail']));
        drupal_exit();
    }

    $post['key'] = variable_get('newsletter2go_apikey');
    $post['doicode'] = variable_get('newsletter2go_doicode');
    $response = executeN2Go('create/recipient', $post);

    $result = array('success' => $response['success']);
    if (!$response) {
        $result['message'] = $texts['failureEmail'];
    } else {
        switch ($response['status']) {
            case 200:
                $result['message'] = $texts['success'];
                break;
            case 441:
                $result['message'] = $texts['failureSubsc'];
                break;
            case 434:
            case 429:
                $result['message'] = $texts['failureEmail'];
                break;
            default:
                $result['message'] = $texts['failureGeneral'];
                break;
        }
    }

    drupal_json_output($result);
    drupal_exit();
}

/**
 * Newsletter2go init.
 */
function newsletter2go_init()
{
    $path = drupal_get_path('module', 'newsletter2go');
    if (arg(0) == 'admin' && arg(3) == 'newsletter2go') {
        drupal_add_js($path . '/newsletter2go_default.js');
        drupal_add_js($path . '/newsletter2go.js');
        drupal_add_js('misc/farbtastic/farbtastic.js');
        drupal_add_css('misc/farbtastic/farbtastic.css');
        drupal_add_css($path . '/newsletter2go.css');
    }

    if (strpos($_SERVER['REQUEST_URI'], url('n2go/widget')) === 0) {
        drupal_add_js($path . '/newsletter2go_widget.js');
    }

    drupal_add_js($path . '/newsletter2go_ajax.js');
}

/**
 * Returns newsletter2go form.
 * @param $form
 * @param $form_state
 * @return mixed
 */
function newsletter2go_form($form, &$form_state)
{
    $apiKey = variable_get('newsletter2go_apikey');
    $formUniqueCode = variable_get('newsletter2go_formUniqueCode');
    $nl2gStylesConfigObject = variable_get('newsletter2go_widgetStyleConfig');

    $response = executeN2Go('get/attributes', array('key' => $apiKey));
    $color = $response['success'] ? 'greenyellow' : 'yellow';


    if (!strlen($formUniqueCode) > 0) {
        $errorMessage = "Please, enter the form unique code!";
    }

    $form['api'] = array(
        '#type' => 'fieldset',
        '#title' => t('Newsletter2Go API'),
        '#tree' => TRUE,
        'connected' => array(
          '#markup' => '<h3 id="n2goHeaderConnection" style="background-color: ' . $color . ';">' .
              ($response['success'] ? t('Connected!') : t('Not connected yet!')) . '</h3>',
        ),

        'apikey' => array(
            '#type' => 'textfield',
            '#title' => t('API Key'),
            '#default_value' => $apiKey,
            '#description' => t('<a href="https://app.newsletter2go.com/en/settings/#/api" target="_blank" >Where do I find my API key?</a>'),
            '#size' => 30, 
            '#required' => TRUE,
            '#attributes' => array(
                'placeholder' => t('Insert your Newsletter2Go API key'),
            ),
        ),
        'formUniqueCode' => array(
            '#id' => 'formUniqueCode',
            '#type' => 'textfield',
            '#title' => t('Form Unique Code'),
            '#default_value' => $formUniqueCode,
            '#description' => t('<a href="https://www.newsletter2go.com/help/managing-recipients/set-up-double-opt-in" target="_blank" >Where do I find form unique code?</a>'),
            '#size' => 30,
            '#attributes' => array(
                'placeholder' => t('Insert your Form Unique Code'),
            ),
        ),
        'submit' => array(
            '#type' => 'submit',
            '#default_value' => t('Save'),
            '#attributes' => array(
                'class' => array('button-pressed'),
            ),
        ),
    );

    $form['widget']['colors'] = array(
        '#type' => 'fieldset',
        '#title' => t('Visual appearance'),
        '#tree' => TRUE,

        'form.background-color' => array(
            '#id' =>'form.background-color',
            '#type' => 'textfield',
            '#title' => t('Form background color'),
            '#size' => 7,
            '#prefix' => '<div style="float: left;">',
            '#attributes' => array(
                'class' => array('js-n2go-widget-field', 'color-picker','nl2g-fields'),
            ),
        ),
        'label.color' => array(
            '#id' =>'label.color',
            '#type' => 'textfield',
            '#title' => t('Label color'),
            '#size' => 7,
            '#prefix' => '<div style="float: left;">',
            '#attributes' => array(
                'class' => array('js-n2go-widget-field', 'color-picker','nl2g-fields'),
            ),
        ),
        'input.color' => array(
            '#id' =>'input.color',
            '#type' => 'textfield',
            '#title' => t('Input color'),
            '#size' => 7,
            '#prefix' => '<div style="float: left;">',
            '#attributes' => array(
                'class' => array('js-n2go-widget-field', 'color-picker','nl2g-fields'),
            ),
        ),
        'input.border-color' => array(
            '#id' =>'input.border-color',
            '#type' => 'textfield',
            '#title' => t('Input border color'),
            '#size' => 7,
            '#attributes' => array(
                'class' => array('js-n2go-widget-field', 'color-picker','nl2g-fields'),
            ),
        ),
        'input.background-color' => array(
            '#id' =>'input.background-color',
            '#type' => 'textfield',
            '#title' => t('Input background color'),
            '#size' => 7,
            '#attributes' => array(
                'class' => array('js-n2go-widget-field', 'color-picker','nl2g-fields'),
            ),
        ),
        'button.color' => array(
            '#id' =>'button.color',
            '#type' => 'textfield',
            '#title' => t('Button text color'),
            '#size' => 7,
            '#attributes' => array(
                'class' => array('js-n2go-widget-field', 'color-picker','nl2g-fields'),
            ),
        ),
        'button.background-color' => array(
            '#id' =>'button.background-color',
            '#type' => 'textfield',
            '#title' => t('Button background color'),
            '#size' => 7,
            '#suffix' => '</div>',
            '#attributes' => array(
                'class' => array('js-n2go-widget-field', 'color-picker','nl2g-fields'),
            ),
        ),
        'colorPicker' => array(
            '#markup' => '<div id="colorPicker" style="float: left; margin-left: 50px; margin-top: 50px;"></div>',
        ),
    );

    $string = '<div id="n2goWidget">
                    <h3>Here is the preview for you</h3>
                    <div id="n2gButtons">
                    <input type="button" value="Preview" class="form-submit btn-nl2go" id="btnShowPreview" />
                    <input type="button" value="Configure Styles" class="form-submit " id="btnShowConfig" />
                    </div>
                     <script>
                        !function(e,t,n,c,r,a,i){e.Newsletter2GoTrackingObject=r,e[r]=e[r]||function(){(e[r].q=e[r].q||[]).push(arguments)},e[r].l=1*new Date,a=t.createElement(n),i=t.getElementsByTagName(n)[0],a.async=1,a.src=c,i.parentNode.insertBefore(a,i)}(window,document,"script","//static.newsletter2go.com/utils.js","n2g");
                    </script>

                      <div id="preview-form-panel" class="preview-pane">
                        <div id="widgetPreview">';
                        if(isset($formUniqueCode) && trim($formUniqueCode) !== ''){

                            $string .=  '<script id="n2g_script">
                            </script>';
                        } else {
                            $string .= '<h3 class="n2go-error-general">'.$errorMessage.'</h3>';
                        }
    $string .=  '</div>
                    <textarea id="widgetStyleConfig" name="widgetStyleConfig">'.$nl2gStylesConfigObject.'</textarea>
                    </div>
                    <p>Your subscription form will show up under "blocks". Feel free to place it on any page.</p>
                    <input type="submit" id="edit-submit" name="op" value="Save subscription form" class="form-submit button-pressed" />
                </div>';

    $form['widget']['somethingWidgetDemo'] = array(
        '#markup' => $string,
    );

    return $form;
}

/**
 * Validate form.
 *
 * @param $form
 * @param $form_state
 */
function newsletter2go_form_validate($form, &$form_state)
{
    if (empty($form_state['values']['api']['apikey'])) {
        form_set_error('', t('You must enter API key.'));
    }
}

/**
 * Form submit action.
 *
 * @param $form
 * @param $form_state
 */
function newsletter2go_form_submit($form, &$form_state)
{
    variable_set('newsletter2go_apikey', $form_state['values']['api']['apikey']);
    variable_set('newsletter2go_formUniqueCode', $form_state['values']['api']['formUniqueCode']);

    isset($form_state['values']['colors']) ?
            variable_set('newsletter2go_colors', $form_state['values']['colors']) : null;
    isset($_POST['widgetStyleConfig']) ?
            variable_set('newsletter2go_widgetStyleConfig', $_POST['widgetStyleConfig']) : null;
}

/**
 * Creates request and returns response.
 * 
 * @param string $action
 * @param mixed $post
 * @return array
 */
function executeN2Go($action, $post)
{
    $cURL = curl_init();
    curl_setopt($cURL, CURLOPT_URL, "https://www.newsletter2go.com/en/api/$action/");
    curl_setopt($cURL, CURLOPT_RETURNTRANSFER, true);

    $postData = '';
    foreach ($post as $k => $v) {
        $postData .= urlencode($k) . '=' . urlencode($v) . '&';
    }
    $postData = substr($postData, 0, -1);

    curl_setopt($cURL, CURLOPT_POST, 1);
    curl_setopt($cURL, CURLOPT_POSTFIELDS, $postData);
    curl_setopt($cURL, CURLOPT_SSL_VERIFYPEER, false);

    $response = curl_exec($cURL);
    curl_close($cURL);

    return json_decode($response, true);
}

/**
 * Registers tokens.
 *
 * @return array
 */
function newsletter2go_token_info()
{
    $info = array();
    // Define token type
    $info['types']['newsletter2go'] = array(
        'name' => t('Newsletter2Go'),
        'description' => t('Tokens related to Newsletter2Go.'),
    );
    // Define token [newsletter2go:plugin']
    $info['tokens']['newsletter2go']['plugin'] = array(
        'name' => t('Show as plugin'),
        'description' => t('Embed subscription form in content.'),
    );
    // Define token [newsletter2go:popup']
    $info['tokens']['newsletter2go']['popup'] = array(
        'name' => t('Show as popup'),
        'description' => t('Show subscription form as popup on page (modal window).'),
    );

    return $info;
}

/**
 * Implements hook_tokens().
 *
 * @param $type
 * @param $tokens
 * @param array $data
 * @param array $options
 * @return array
 */
function newsletter2go_tokens($type, $tokens, array $data = array(), array $options = array())
{
    $replacements = array();

    if ($type == 'newsletter2go') {
        foreach ($tokens as $name => $original) {
            switch ($name) {
                case 'plugin':
                    $block = newsletter2go_block_view($type);
                    break;
                case 'popup':
                    $block = newsletter2go_block_view($type, 'createPopup');
                    break;
                default:
                    $block['content'] = "<p style='color:red;'>Wrong short code parameter <b>$name</b> - should be 'plugin' or 'popup'</p>";
            }

            $replacements[$original] = $block['content'];
        }

    }

    return $replacements;
}
