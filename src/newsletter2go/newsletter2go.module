<?php

function newsletter2go_block_info()
{
    $blocks['newsletter2go'] = array(
        'info' => t('Newsletter2Go'),
        'cache' => DRUPAL_CACHE_PER_ROLE,
    );

    return $blocks;
}

function newsletter2go_block_view($delta = '')
{
    $block = array();

    switch ($delta) {
        case 'newsletter2go':
            $block['subject'] = t('Newsletter2Go');
            $block['content'] = variable_get('newsletter2go_widget');
    }

    return $block;
}

function newsletter2go_permission()
{
    return array(
        'access newsletter2go content' => array(
            'title' => t('Access content for the newsletter2go module'),
        )
    );
}

function newsletter2go_menu()
{
    $items = array();

    $items['admin/config/content/newsletter2go'] = array(
        'title' => 'Newsletter2Go',
        'description' => 'API page for newsletter2go module',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('newsletter2go_form'),
        'access arguments' => array('access administration pages'),
        'type' => MENU_NORMAL_ITEM,
    );

    $items['n2go/widget'] = array(
        'title' => 'Widget Preview',
        'page callback' => '_widget_preview_page',
        'type' => MENU_CALLBACK,
        'access callback' => true,
    );

    $items['api/n2go'] = array(
        'title' => 'Newsletter2Go',
        'page callback' => '_newsletter2go_page',
        'access arguments' => array('access newsletter2go content'),
        'type' => MENU_CALLBACK,
        'access callback' => true,
    );
    $items['n2go/subscribe'] = array(
        'title' => 'Subscribe',
        'page callback' => '_ajax_newsletter2go_page',
        'access arguments' => array('access newsletter2go content'),
        'type' => MENU_CALLBACK,
        'access callback' => true,
    );

    return $items;
}

function newsletter2go_page_alter(&$page)
{
    if (strpos($_SERVER['REQUEST_URI'], url('n2go/widget')) === 0) {
        $page['page_top'] = null;
        $page['sidebar_first'] = null;
        $page['sidebar_second'] = null;
        $page['page_bottom'] = null;
        $page['footer'] = null;
    }
}

function _widget_preview_page()
{
    return urldecode($_GET['widget']);
}

function _newsletter2go_page()
{
    require_once __DIR__ . '/newsletter2goApi.php';
    $instance = Newsletter2GoApi::getInstance();
    $instance->processRequest($_SERVER['PHP_AUTH_USER'], $_GET, $_POST);
}

function _ajax_newsletter2go_page()
{
    $notFound = false;
    $noValidEmail = false;
    $attributes = variable_get('newsletter2go_fields');
    $requiredFields = variable_get('newsletter2go_required');
    $texts = variable_get('newsletter2go_texts');
    $post = array();
    foreach ($attributes as $k => $v) {
        if (!empty($requiredFields[$k]) && empty($_POST[$k])) {
            $notFound = true;
            break;
        }

        if ($k == 'email') {
            if (!filter_var($_POST[$k], FILTER_VALIDATE_EMAIL)) {
                $noValidEmail = true;
            }
        }

        $post[$k] = $_POST[$k];
    }

    if ($notFound) {
        drupal_json_output(array('success' => 0, 'message' => $texts['failureRequired']));
        drupal_exit();
    }

    if ($noValidEmail) {
        drupal_json_output(array('success' => 0, 'message' => $texts['failureEmail']));
        drupal_exit();
    }

    $post['key'] = variable_get('newsletter2go_apikey');
    $post['doicode'] = variable_get('newsletter2go_doicode');
    $response = executeN2Go('create/recipient', $post);

    $result = array('success' => $response['success']);
    if (!$response) {
        $result['message'] = $texts['failureEmail'];
    } else {
        switch ($response['status']) {
            case 200:
                $result['message'] = $texts['success'];
                break;
            case 441:
                $result['message'] = $texts['failureSubsc'];
                break;
            case 434:
            case 429:
                $result['message'] = $texts['failureEmail'];
                break;
            default:
                $result['message'] = $texts['failureGeneral'];
                break;
        }
    }

    drupal_json_output($result);
    drupal_exit();
}

function newsletter2go_init()
{
    $path = drupal_get_path('module', 'newsletter2go');
    if (arg(0) == 'admin') {
        drupal_add_js($path . '/newsletter2go.js');
        drupal_add_js('misc/farbtastic/farbtastic.js');
        drupal_add_css('misc/farbtastic/farbtastic.css');
        drupal_add_css($path . '/newsletter2go.css');
    }

    if (strpos($_SERVER['REQUEST_URI'], url('n2go/widget')) === 0) {
        drupal_add_js($path . '/newsletter2go_widget.js');
    }

    drupal_add_js($path . '/newsletter2go_ajax.js');
}

function newsletter2go_form($form, &$form_state)
{
    $apiKey = variable_get('newsletter2go_apikey');
    $doiCode = variable_get('newsletter2go_doicode');
    $selectedFields = variable_get('newsletter2go_fields');
    $texts = variable_get('newsletter2go_texts');
    $colors = variable_get('newsletter2go_colors');
    $widget = variable_get('newsletter2go_widget');
    $requiredFields = variable_get('newsletter2go_required');

    $attributesApi = executeN2Go('get/attributes', array('key' => $apiKey));

    $doi = executeN2Go('get/form', array('key' => $apiKey, 'doicode' => $doiCode));
    $attributesApi['doi-success'] = $doi['success'];
    if ($doi['success']) {
        $code = rawurldecode($doi['value']['code']);
        if (strpos($code, '"' . $doiCode . '"')!== false) {
            $attributesApi['doi-name'] = $doi['value']['host'];
        }
    }

    $color = $attributesApi['success'] ? 'greenyellow' : 'yellow';
    $doiColor = $attributesApi['doi-success'] ? 'greenyellow' : 'yellow';

    //API
    $form['api'] = array(
        '#type' => 'fieldset',
        '#title' => t('Newsletter2Go API'),
        '#tree' => TRUE,
        'connected' => array(
            '#markup' => '<h3 id="n2goHeaderConnection" style="background-color: ' . $color . ';">' .
                ($attributesApi['success'] ? t('Connected!') : t('Not connected yet!')) . '</h3>',
        ),
        'apikey' => array(
            '#type' => 'textfield',
            '#title' => t('API Key'),
            '#default_value' => $apiKey,
            '#description' => t('<a href="https://app.newsletter2go.com/en/settings/#/api" target="_blank" >Where do I find my API key?</a>'),
            '#size' => 30, 
            '#required' => TRUE,
            '#attributes' => array(
                'placeholder' => t('Insert your Newsletter2Go API key'),
            ),
        ),
        'connectedDOI' => array(
            '#markup' => '<h3 id="n2goHeaderConnection" style="background-color: ' . $doiColor . ';">' .
                ($attributesApi['doi-success'] ? t('Valid DOI-Code ( Host: ') . $attributesApi['doi-name'] . ')' :
                    t('Invalid DOI-Code')) . '</h3>',
        ),
        'doicode' => array(
            '#type' => 'textfield',
            '#title' => t('Double Opt In Code'),
            '#default_value' => $doiCode,
            '#description' => t('<a href="https://www.newsletter2go.com/help/managing-recipients/set-up-double-opt-in" target="_blank" >Where do I find the double opt in code?</a>'),
            '#size' => 30, 
            '#required' => TRUE,
            '#attributes' => array(
                'placeholder' => t('Insert your Newsletter2Go DOI Code'),
            ),
        ),
        'submit' => array(
            '#type' => 'submit',
            '#default_value' => t('Save'),
            '#attributes' => array(
                'class' => array('button-pressed'),
            ),
        ),
    );

    //Widget
    $form['widget'] = array(
        '#type' => 'fieldset',
        '#title' => t('Configure subscription form'),
        '#tree' => TRUE,
    );

    $num = 4 + count($attributesApi['value']);
    $fields = array(
        'email' => array(
            'name' => 'email',
            'title' => t('E-mail address'),
            'sort' => isset($selectedFields['email']) ? $selectedFields['email'] : $num,
            'checked' => true,
            'required' => 'required',
        ),
        'firstname' => array(
            'name' => 'firstname',
            'title' => t('First name'),
            'sort' => isset($selectedFields['firstname']) ? $selectedFields['firstname'] : $num,
            'checked' => isset($selectedFields['firstname']),
            'required' => isset($requiredFields['firstname']) ? $requiredFields['firstname'] : '',
        ),
        'lastname' => array(
            'name' => 'lastname',
            'title' => t('Last name'),
            'sort' => isset($selectedFields['lastname']) ? $selectedFields['lastname'] : $num,
            'checked' => isset($selectedFields['lastname']),
            'required' => isset($requiredFields['lastname']) ? $requiredFields['lastname'] : '',
        ),
        'gender' => array(
            'name' => 'gender',
            'title' => t('Gender'),
            'sort' => isset($selectedFields['gender']) ? $selectedFields['gender'] : $num,
            'checked' => isset($selectedFields['gender']),
            'required' => isset($requiredFields['gender']) ? $requiredFields['gender'] : '',
        ),
    );
    if ($attributesApi['success']) {
        foreach ($attributesApi['value'] as $atr) {
            $fields[$atr] = array(
                'name' => $atr,
                'title' => $atr,
                'sort' => isset($selectedFields[$atr]) ? $selectedFields[$atr] : $num,
                'checked' => isset($selectedFields[$atr]),
                'required' => isset($requiredFields[$atr]) ? $requiredFields[$atr] : '',
            );
        }
    }

    usort($fields, function($a, $b) {
        if ($a['sort'] == $b['sort']) {
            return 0;
        }

        return $a['sort'] < $b['sort'] ? -1 : 1;
    });

    $form['widget']['fields'] = array(
        '#type' => 'fieldset',
        '#title' => t('Which data fields should be visible in your subscription form?'),
        '#tree' => TRUE,
        '#prefix' => '<div id="widgetFields">',
        '#suffix' => '</div>',
    );

    $i = 1;
    foreach ($fields as $field) {
        $key = $field['name'];
        $title = $field['title'];
        $required = $field['required'];
        $form['widget']['fields'][$key] = array(
            '#type' => 'checkbox',
            '#default_value' => $field['checked'],
            '#return_value' => $key,
            '#title' => $title . ($required ? ' <span class="form-required n2go-required" title="This field is required.">*</span>' : ''),
            '#attributes' => array(
                'class' => array('js-n2go-widget-field'),
                'title' => array($title),
            ),
            '#prefix' => '<div class="widgetField" draggable="true">',
            '#suffix' => '<input type="hidden" name="' . $key . 'Sort" value="' . $i++ . '" /><input type="hidden" name="' . $key . 'Required" value="' . $required . '" /></div>',
        );

        if ($key === 'email') {
            $form['widget']['fields'][$key]['#attributes']['disabled'] = 'true';
        }
    }

    $form['widget']['texts'] = array(
        '#type' => 'fieldset',
        '#title' => t('General settings'),
        '#tree' => TRUE,
        'success' => array(
            '#type' => 'textfield',
            '#title' => t('Success'),
            '#default_value' => empty($texts['success']) ? t('Thank you for signing up. We have sent you an email with a confirmation link. Please check your inbox.') : $texts['success'],
        ),
        'failureSubsc' => array(
            '#type' => 'textfield',
            '#title' => t('Filure (already subscribed)'),
            '#default_value' => empty($texts['failureSubsc']) ? t('Thank you for signing up. You are already signed up and will continue to receive our newsletter.') : $texts['failureSubsc'],
        ),
        'failureEmail' => array(
            '#type' => 'textfield',
            '#title' => t('Failure (wrong email syntax)'),
            '#default_value' => empty($texts['failureEmail']) ? t('The email address you inserted does not seem to be valid. Please correct it.') : $texts['failureEmail'],
        ),
        'failureGeneral' => array(
            '#type' => 'textfield',
            '#title' => t('Failure (general error)'),
            '#default_value' => empty($texts['failureGeneral']) ? t('We were not able to sign you up. Please try again.') : $texts['failureGeneral'],
        ),
        'failureRequired' => array(
            '#type' => 'textfield',
            '#title' => t('Failure (required fields)'),
            '#default_value' => empty($texts['failureRequired']) ? t('Please fill all fields.') : $texts['failureGeneral'],
        ),
        'landingpage' => array(
            '#type' => 'textfield',
            '#title' => t('Landing page after confirmation'),
            '#default_value' => empty($texts['landingpage']) ? '' : $texts['landingpage'],
        ),
        'buttonText' => array(
            '#type' => 'textfield',
            '#title' => t('Text on button'),
            '#default_value' => empty($texts['buttonText']) ? t('Subscribe now!') : $texts['buttonText'],
            '#attributes' => array(
                'class' => array('js-n2go-widget-field'),
            ),
        ),
    );

    $form['widget']['colors'] = array(
        '#type' => 'fieldset',
        '#title' => t('Visual appearance'),
        '#tree' => TRUE,
        'textColor' => array(
            '#type' => 'textfield',
            '#title' => t('Text color'),
            '#default_value' => empty($colors['textColor']) ? '' : $colors['textColor'],
            '#size' => 7,
            '#prefix' => '<div style="float: left;">',
            '#attributes' => array(
                'class' => array('js-n2go-widget-field', 'color-picker'),
            ),
        ),
        'borderColor' => array(
            '#type' => 'textfield',
            '#title' => t('Input border color'),
            '#default_value' => empty($colors['borderColor']) ? '' : $colors['borderColor'],
            '#size' => 7,
            '#attributes' => array(
                'class' => array('js-n2go-widget-field', 'color-picker'),
            ),
        ),
        'bgColor' => array(
            '#type' => 'textfield',
            '#title' => t('Input background color'),
            '#default_value' => empty($colors['bgColor']) ? '' : $colors['bgColor'],
            '#size' => 7,
            '#attributes' => array(
                'class' => array('js-n2go-widget-field', 'color-picker'),
            ),
        ),
        'btnTextColor' => array(
            '#type' => 'textfield',
            '#title' => t('Button text color'),
            '#default_value' => empty($colors['btnTextColor']) ? '' : $colors['btnTextColor'],
            '#size' => 7,
            '#attributes' => array(
                'class' => array('js-n2go-widget-field', 'color-picker'),
            ),
        ),
        'btnBgColor' => array(
            '#type' => 'textfield',
            '#title' => t('Button background color'),
            '#default_value' => empty($colors['btnBgColor']) ? '' : $colors['btnBgColor'],
            '#size' => 7,
            '#suffix' => '</div>',
            '#attributes' => array(
                'class' => array('js-n2go-widget-field', 'color-picker'),
            ),
        ),
        'colorPicker' => array(
            '#markup' => '<div id="colorPicker" style="float: left; margin-left: 50px; margin-top: 50px;"></div>',
        ),
    );

    $string = '<div id="n2goWidget">
                    <h3>Here is the preview for you</h3>
                    <input type="button" value="Preview" class="form-submit" id="btnShowPreview" />
                    <input type="button" value="Source Code" class="form-submit" id="btnShowSource" />
                    <div class="preview-pane">
                        <iframe id="widgetPreview" style="width: 100%" src="' . url('n2go/widget') . '?widget=' . urlencode($widget) . '"></iframe>
                        <textarea id="widgetSourceCode" name="widgetSourceCode" style="display: none;"> ' . ($widget ? : '') . '</textarea>
                            <div id="preview-loading-mask">
                            <img src="' . url() . drupal_get_path('module', 'newsletter2go') . '/images/ajax-loader.gif" alt="Loading..." />
                        </div>
                    </div>
                    <input type="hidden" value="' . url('n2go/widget') . '" id="widgetPageUrl" />
                    <p>Your subscription form will show up under "blocks". Feel free to place it on any page.</p>
                    <input type="submit" id="edit-submit" name="op" value="Save subscription form" class="form-submit button-pressed" />
                </div>';

    $form['widget']['somethingWidgetDemo'] = array(
        '#markup' => $string,
    );

    return $form;
}

function newsletter2go_form_validate($form, &$form_state)
{
    if (empty($form_state['values']['api']['apikey'])) {
        form_set_error('', t('You must enter API key.'));
    }
}

function newsletter2go_form_submit($form, &$form_state)
{
    variable_set('newsletter2go_apikey', $form_state['values']['api']['apikey']);
    variable_set('newsletter2go_doicode', $form_state['values']['api']['doicode']);
    $fields = array('email' => $form_state['input']['emailSort']);
    $requiredFields = array('email' => $form_state['input']['emailRequired']);
    foreach ($form_state['values']['widget']['fields'] as $key => $value) {
        if ($value) {
            $fields[$key] = $form_state['input'][$key . 'Sort'];
            $requiredFields[$key] = $form_state['input'][$key . 'Required'];
        }
    }

    variable_set('newsletter2go_fields', $fields);
    variable_set('newsletter2go_required', $requiredFields);
    variable_set('newsletter2go_texts', $form_state['values']['widget']['texts']);
    variable_set('newsletter2go_colors', $form_state['values']['widget']['colors']);
    variable_set('newsletter2go_widget', $form_state['input']['widgetSourceCode']);
}

/**
 * Creates request and returns response.
 * 
 * @param string $action
 * @param mixed $post
 * @return array
 */
function executeN2Go($action, $post)
{
    $cURL = curl_init();
    curl_setopt($cURL, CURLOPT_URL, "https://www.newsletter2go.com/en/api/$action/");
    curl_setopt($cURL, CURLOPT_RETURNTRANSFER, true);

    $postData = '';
    foreach ($post as $k => $v) {
        $postData .= urlencode($k) . '=' . urlencode($v) . '&';
    }
    $postData = substr($postData, 0, -1);

    curl_setopt($cURL, CURLOPT_POST, 1);
    curl_setopt($cURL, CURLOPT_POSTFIELDS, $postData);
    curl_setopt($cURL, CURLOPT_SSL_VERIFYPEER, false);

    $response = curl_exec($cURL);
    curl_close($cURL);

    return json_decode($response, true);
}
